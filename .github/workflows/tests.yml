name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1', '8.2', '8.3']
        dependency-version: [prefer-lowest, prefer-stable]
        
    name: PHP ${{ matrix.php-version }} - ${{ matrix.dependency-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, json
        coverage: xdebug

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependency-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.dependency-version }}-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Update dependencies (prefer-lowest)
      if: matrix.dependency-version == 'prefer-lowest'
      run: composer update --prefer-lowest --prefer-dist --no-progress

    - name: Update dependencies (prefer-stable)
      if: matrix.dependency-version == 'prefer-stable'
      run: composer update --prefer-stable --prefer-dist --no-progress

    - name: Run test suite
      run: composer test

    - name: Generate coverage report
      if: matrix.php-version == '8.3' && matrix.dependency-version == 'prefer-stable'
      run: |
        vendor/bin/phpunit --coverage-clover coverage.xml
        vendor/bin/phpunit --coverage-html coverage

    - name: Upload coverage reports to Codecov
      if: matrix.php-version == '8.3' && matrix.dependency-version == 'prefer-stable'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  code-quality:
    runs-on: ubuntu-latest
    
    name: Code Quality

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, json

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.3-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.3-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHPStan
      run: composer phpstan

    - name: Check code style
      run: composer cs-check

  security:
    runs-on: ubuntu-latest
    
    name: Security Audit

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.3-${{ hashFiles('**/composer.lock') }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run security audit
      run: composer security-audit

    - name: Check for known security vulnerabilities
      uses: symfonycorp/security-checker-action@v5